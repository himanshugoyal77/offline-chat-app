"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/TalkingAvatar.tsx":
/*!**************************************!*\
  !*** ./components/TalkingAvatar.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nconst TalkingAvatar = (param)=>{\n    let { script } = param;\n    _s();\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [talkStreamId, setTalkStreamId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const apiKey = \"Z2FyYmFnZWlkNzg2QGdtYWlsLmNvbQ:Ddo7s-5dWe3uCwTK0hfn8\"; // Replace with your D-ID API key\n    const imageUrl = \"https://img.freepik.com/free-photo/portrait-white-man-isolated_53876-40306.jpg?semt=ais_hybrid\"; // Replace with the URL to your avatar image\n    const createTalkStream = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"TalkingAvatar.useCallback[createTalkStream]\": async ()=>{\n            try {\n                // Step 1: Create a new talk stream only if script is not empty\n                if (!script || script.length < 3) {\n                    throw new Error(\"Input text must be at least 3 characters long.\");\n                }\n                const response = await fetch(\"https://api.d-id.com/talks/\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: \"Basic \".concat(btoa(apiKey + \":\"))\n                    },\n                    body: JSON.stringify({\n                        source_url: imageUrl,\n                        script: {\n                            type: \"text\",\n                            input: script,\n                            provider: {\n                                type: \"google\"\n                            }\n                        }\n                    })\n                });\n                if (!response.ok) {\n                    throw new Error(\"Failed to create talk stream\");\n                }\n                const { id } = await response.json();\n                setTalkStreamId(id); // Store the talk stream ID to trigger the next steps\n            } catch (error) {\n                console.error(\"Error creating talk stream:\", error);\n            }\n        }\n    }[\"TalkingAvatar.useCallback[createTalkStream]\"], [\n        script\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"TalkingAvatar.useEffect\": ()=>{\n            if (talkStreamId) {\n                const startWebRTCConnection = {\n                    \"TalkingAvatar.useEffect.startWebRTCConnection\": async ()=>{\n                        try {\n                            const offerResponse = await fetch(\"https://api.d-id.com/talks/\".concat(talkStreamId, \"/\"), {\n                                headers: {\n                                    \"Content-Type\": \"application/json\",\n                                    Authorization: \"Basic \".concat(btoa(apiKey + \":\"))\n                                }\n                            });\n                            if (!offerResponse.ok) {\n                                throw new Error(\"Failed to start WebRTC connection\");\n                            }\n                            const { sdp } = await offerResponse.json();\n                            // Step 3: Play the video stream\n                            if (videoRef.current) {\n                                videoRef.current.srcObject = new MediaStream();\n                                videoRef.current.src = URL.createObjectURL(new Blob([\n                                    sdp\n                                ], {\n                                    type: \"application/sdp\"\n                                }));\n                                videoRef.current.play();\n                            }\n                        } catch (error) {\n                            console.error(\"Error starting WebRTC connection:\", error);\n                        }\n                    }\n                }[\"TalkingAvatar.useEffect.startWebRTCConnection\"];\n                startWebRTCConnection();\n            }\n        }\n    }[\"TalkingAvatar.useEffect\"], [\n        talkStreamId\n    ]); // Only run this effect when the talk stream ID is available\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"TalkingAvatar.useEffect\": ()=>{\n            createTalkStream();\n        }\n    }[\"TalkingAvatar.useEffect\"], [\n        script,\n        createTalkStream\n    ]); // Only recreate the talk stream when the script changes\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"video\", {\n        ref: videoRef,\n        controls: true\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\aadil\\\\TechXpression\\\\components\\\\TalkingAvatar.tsx\",\n        lineNumber: 86,\n        columnNumber: 10\n    }, undefined);\n};\n_s(TalkingAvatar, \"Q12RwETWo+oTLxpBhMb2Irg696Q=\");\n_c = TalkingAvatar;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TalkingAvatar);\nvar _c;\n$RefreshReg$(_c, \"TalkingAvatar\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvVGFsa2luZ0F2YXRhci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQ3dFO0FBRXhFLE1BQU1LLGdCQUFnQjtRQUFDLEVBQUVDLE1BQU0sRUFBc0I7O0lBQ25ELE1BQU1DLFdBQVdMLDZDQUFNQSxDQUFtQjtJQUMxQyxNQUFNLENBQUNNLGNBQWNDLGdCQUFnQixHQUFHTiwrQ0FBUUEsQ0FBZ0I7SUFDaEUsTUFBTU8sU0FBUyx3REFBd0QsaUNBQWlDO0lBQ3hHLE1BQU1DLFdBQ0osa0dBQWtHLDRDQUE0QztJQUVoSixNQUFNQyxtQkFBbUJSLGtEQUFXQTt1REFBQztZQUNuQyxJQUFJO2dCQUNGLCtEQUErRDtnQkFDL0QsSUFBSSxDQUFDRSxVQUFVQSxPQUFPTyxNQUFNLEdBQUcsR0FBRztvQkFDaEMsTUFBTSxJQUFJQyxNQUFNO2dCQUNsQjtnQkFFQSxNQUFNQyxXQUFXLE1BQU1DLE1BQU0sK0JBQStCO29CQUMxREMsUUFBUTtvQkFDUkMsU0FBUzt3QkFDUCxnQkFBZ0I7d0JBQ2hCQyxlQUFlLFNBQTRCLE9BQW5CQyxLQUFLVixTQUFTO29CQUN4QztvQkFDQVcsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO3dCQUNuQkMsWUFBWWI7d0JBQ1pMLFFBQVE7NEJBQ05tQixNQUFNOzRCQUNOQyxPQUFPcEI7NEJBQ1BxQixVQUFVO2dDQUFFRixNQUFNOzRCQUFTO3dCQUM3QjtvQkFDRjtnQkFDRjtnQkFFQSxJQUFJLENBQUNWLFNBQVNhLEVBQUUsRUFBRTtvQkFDaEIsTUFBTSxJQUFJZCxNQUFNO2dCQUNsQjtnQkFFQSxNQUFNLEVBQUVlLEVBQUUsRUFBRSxHQUFHLE1BQU1kLFNBQVNlLElBQUk7Z0JBQ2xDckIsZ0JBQWdCb0IsS0FBSyxxREFBcUQ7WUFDNUUsRUFBRSxPQUFPRSxPQUFPO2dCQUNkQyxRQUFRRCxLQUFLLENBQUMsK0JBQStCQTtZQUMvQztRQUNGO3NEQUFHO1FBQUN6QjtLQUFPO0lBRVhMLGdEQUFTQTttQ0FBQztZQUNSLElBQUlPLGNBQWM7Z0JBQ2hCLE1BQU15QjtxRUFBd0I7d0JBQzVCLElBQUk7NEJBQ0YsTUFBTUMsZ0JBQWdCLE1BQU1sQixNQUMxQiw4QkFBMkMsT0FBYlIsY0FBYSxNQUMzQztnQ0FDRVUsU0FBUztvQ0FDUCxnQkFBZ0I7b0NBQ2hCQyxlQUFlLFNBQTRCLE9BQW5CQyxLQUFLVixTQUFTO2dDQUN4Qzs0QkFDRjs0QkFHRixJQUFJLENBQUN3QixjQUFjTixFQUFFLEVBQUU7Z0NBQ3JCLE1BQU0sSUFBSWQsTUFBTTs0QkFDbEI7NEJBRUEsTUFBTSxFQUFFcUIsR0FBRyxFQUFFLEdBQUcsTUFBTUQsY0FBY0osSUFBSTs0QkFFeEMsZ0NBQWdDOzRCQUNoQyxJQUFJdkIsU0FBUzZCLE9BQU8sRUFBRTtnQ0FDcEI3QixTQUFTNkIsT0FBTyxDQUFDQyxTQUFTLEdBQUcsSUFBSUM7Z0NBQ2pDL0IsU0FBUzZCLE9BQU8sQ0FBQ0csR0FBRyxHQUFHQyxJQUFJQyxlQUFlLENBQ3hDLElBQUlDLEtBQUs7b0NBQUNQO2lDQUFJLEVBQUU7b0NBQUVWLE1BQU07Z0NBQWtCO2dDQUU1Q2xCLFNBQVM2QixPQUFPLENBQUNPLElBQUk7NEJBQ3ZCO3dCQUNGLEVBQUUsT0FBT1osT0FBTzs0QkFDZEMsUUFBUUQsS0FBSyxDQUFDLHFDQUFxQ0E7d0JBQ3JEO29CQUNGOztnQkFFQUU7WUFDRjtRQUNGO2tDQUFHO1FBQUN6QjtLQUFhLEdBQUcsNERBQTREO0lBRWhGUCxnREFBU0E7bUNBQUM7WUFDUlc7UUFDRjtrQ0FBRztRQUFDTjtRQUFRTTtLQUFpQixHQUFHLHdEQUF3RDtJQUV4RixxQkFBTyw4REFBQ2dDO1FBQU1DLEtBQUt0QztRQUFVdUMsUUFBUTs7Ozs7O0FBQ3ZDO0dBbkZNekM7S0FBQUE7QUFxRk4saUVBQWVBLGFBQWFBLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcSFBcXE9uZURyaXZlXFxEZXNrdG9wXFxhYWRpbFxcVGVjaFhwcmVzc2lvblxcY29tcG9uZW50c1xcVGFsa2luZ0F2YXRhci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2xvdWRDb2cgfSBmcm9tIFwibHVjaWRlLXJlYWN0XCI7XHJcbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XHJcblxyXG5jb25zdCBUYWxraW5nQXZhdGFyID0gKHsgc2NyaXB0IH06IHsgc2NyaXB0OiBzdHJpbmcgfSkgPT4ge1xyXG4gIGNvbnN0IHZpZGVvUmVmID0gdXNlUmVmPEhUTUxWaWRlb0VsZW1lbnQ+KG51bGwpO1xyXG4gIGNvbnN0IFt0YWxrU3RyZWFtSWQsIHNldFRhbGtTdHJlYW1JZF0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcclxuICBjb25zdCBhcGlLZXkgPSBcIloyRnlZbUZuWldsa056ZzJRR2R0WVdsc0xtTnZiUTpEZG83cy01ZFdlM3VDd1RLMGhmbjhcIjsgLy8gUmVwbGFjZSB3aXRoIHlvdXIgRC1JRCBBUEkga2V5XHJcbiAgY29uc3QgaW1hZ2VVcmwgPVxyXG4gICAgXCJodHRwczovL2ltZy5mcmVlcGlrLmNvbS9mcmVlLXBob3RvL3BvcnRyYWl0LXdoaXRlLW1hbi1pc29sYXRlZF81Mzg3Ni00MDMwNi5qcGc/c2VtdD1haXNfaHlicmlkXCI7IC8vIFJlcGxhY2Ugd2l0aCB0aGUgVVJMIHRvIHlvdXIgYXZhdGFyIGltYWdlXHJcblxyXG4gIGNvbnN0IGNyZWF0ZVRhbGtTdHJlYW0gPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICAvLyBTdGVwIDE6IENyZWF0ZSBhIG5ldyB0YWxrIHN0cmVhbSBvbmx5IGlmIHNjcmlwdCBpcyBub3QgZW1wdHlcclxuICAgICAgaWYgKCFzY3JpcHQgfHwgc2NyaXB0Lmxlbmd0aCA8IDMpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnB1dCB0ZXh0IG11c3QgYmUgYXQgbGVhc3QgMyBjaGFyYWN0ZXJzIGxvbmcuXCIpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFwiaHR0cHM6Ly9hcGkuZC1pZC5jb20vdGFsa3MvXCIsIHtcclxuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJhc2ljICR7YnRvYShhcGlLZXkgKyBcIjpcIil9YCxcclxuICAgICAgICB9LFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgIHNvdXJjZV91cmw6IGltYWdlVXJsLFxyXG4gICAgICAgICAgc2NyaXB0OiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFwidGV4dFwiLFxyXG4gICAgICAgICAgICBpbnB1dDogc2NyaXB0LFxyXG4gICAgICAgICAgICBwcm92aWRlcjogeyB0eXBlOiBcImdvb2dsZVwiIH0sXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH0pLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gY3JlYXRlIHRhbGsgc3RyZWFtXCIpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCB7IGlkIH0gPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgIHNldFRhbGtTdHJlYW1JZChpZCk7IC8vIFN0b3JlIHRoZSB0YWxrIHN0cmVhbSBJRCB0byB0cmlnZ2VyIHRoZSBuZXh0IHN0ZXBzXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgY3JlYXRpbmcgdGFsayBzdHJlYW06XCIsIGVycm9yKTtcclxuICAgIH1cclxuICB9LCBbc2NyaXB0XSk7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBpZiAodGFsa1N0cmVhbUlkKSB7XHJcbiAgICAgIGNvbnN0IHN0YXJ0V2ViUlRDQ29ubmVjdGlvbiA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgY29uc3Qgb2ZmZXJSZXNwb25zZSA9IGF3YWl0IGZldGNoKFxyXG4gICAgICAgICAgICBgaHR0cHM6Ly9hcGkuZC1pZC5jb20vdGFsa3MvJHt0YWxrU3RyZWFtSWR9L2AsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCYXNpYyAke2J0b2EoYXBpS2V5ICsgXCI6XCIpfWAsXHJcbiAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgKTtcclxuXHJcbiAgICAgICAgICBpZiAoIW9mZmVyUmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIHN0YXJ0IFdlYlJUQyBjb25uZWN0aW9uXCIpO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGNvbnN0IHsgc2RwIH0gPSBhd2FpdCBvZmZlclJlc3BvbnNlLmpzb24oKTtcclxuXHJcbiAgICAgICAgICAvLyBTdGVwIDM6IFBsYXkgdGhlIHZpZGVvIHN0cmVhbVxyXG4gICAgICAgICAgaWYgKHZpZGVvUmVmLmN1cnJlbnQpIHtcclxuICAgICAgICAgICAgdmlkZW9SZWYuY3VycmVudC5zcmNPYmplY3QgPSBuZXcgTWVkaWFTdHJlYW0oKTtcclxuICAgICAgICAgICAgdmlkZW9SZWYuY3VycmVudC5zcmMgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKFxyXG4gICAgICAgICAgICAgIG5ldyBCbG9iKFtzZHBdLCB7IHR5cGU6IFwiYXBwbGljYXRpb24vc2RwXCIgfSlcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgdmlkZW9SZWYuY3VycmVudC5wbGF5KCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBzdGFydGluZyBXZWJSVEMgY29ubmVjdGlvbjpcIiwgZXJyb3IpO1xyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuXHJcbiAgICAgIHN0YXJ0V2ViUlRDQ29ubmVjdGlvbigpO1xyXG4gICAgfVxyXG4gIH0sIFt0YWxrU3RyZWFtSWRdKTsgLy8gT25seSBydW4gdGhpcyBlZmZlY3Qgd2hlbiB0aGUgdGFsayBzdHJlYW0gSUQgaXMgYXZhaWxhYmxlXHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBjcmVhdGVUYWxrU3RyZWFtKCk7XHJcbiAgfSwgW3NjcmlwdCwgY3JlYXRlVGFsa1N0cmVhbV0pOyAvLyBPbmx5IHJlY3JlYXRlIHRoZSB0YWxrIHN0cmVhbSB3aGVuIHRoZSBzY3JpcHQgY2hhbmdlc1xyXG5cclxuICByZXR1cm4gPHZpZGVvIHJlZj17dmlkZW9SZWZ9IGNvbnRyb2xzIC8+O1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVGFsa2luZ0F2YXRhcjtcclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlRWZmZWN0IiwidXNlUmVmIiwidXNlU3RhdGUiLCJ1c2VDYWxsYmFjayIsIlRhbGtpbmdBdmF0YXIiLCJzY3JpcHQiLCJ2aWRlb1JlZiIsInRhbGtTdHJlYW1JZCIsInNldFRhbGtTdHJlYW1JZCIsImFwaUtleSIsImltYWdlVXJsIiwiY3JlYXRlVGFsa1N0cmVhbSIsImxlbmd0aCIsIkVycm9yIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwiYnRvYSIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5Iiwic291cmNlX3VybCIsInR5cGUiLCJpbnB1dCIsInByb3ZpZGVyIiwib2siLCJpZCIsImpzb24iLCJlcnJvciIsImNvbnNvbGUiLCJzdGFydFdlYlJUQ0Nvbm5lY3Rpb24iLCJvZmZlclJlc3BvbnNlIiwic2RwIiwiY3VycmVudCIsInNyY09iamVjdCIsIk1lZGlhU3RyZWFtIiwic3JjIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwiQmxvYiIsInBsYXkiLCJ2aWRlbyIsInJlZiIsImNvbnRyb2xzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/TalkingAvatar.tsx\n"));

/***/ })

});